name: Android Build with DeepSeek Recoding & Fixes

on:
  release:
    types: [published]
  workflow_dispatch:

jobs:
  recode-and-build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      DEEPSEEK_API_KEY: ${{ secrets.DEEPSEEK_API_KEY }}
      RECODE_TARGETS: "**/*.kt,src/main/res/layout/*.xml,build.gradle.kts"  # Focus on critical files
      MAX_FILES: 30
      MAX_FILE_SIZE: 10000
      PARALLEL_JOBS: 4
      MODEL: deepseek-coder-6.7b-instruct  # Faster model

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 50
        
    # DeepSeek-powered code recoding with specialized fixes
    - name: Recode files with DeepSeek
      id: deepseek_recode
      continue-on-error: true
      run: |
        # Install dependencies
        sudo apt-get install -y jq parallel
        pip install regex

        # Find and select target files
        files=$(find . -type f \( -name "*.kt" -o -name "*.xml" -o -name "*.gradle.kts" \) -size -${MAX_FILE_SIZE}c | head -n $MAX_FILES)
        echo "Selected ${MAX_FILES} files for recoding:"
        echo "$files" | sed 's/^/ - /'
        
        # Backup original files
        mkdir -p original_files
        for file in $files; do
          cp "$file" "original_files/${file//\//_}"
        done
        
        # Create processing script with specialized fixes
        cat > recode_worker.sh <<'EOF'
        #!/bin/bash
        file=$1
        
        # Get git context
        history=$(git log --pretty=format:"%ad %s" --date=short -n 3 -- "$file")
        content=$(cat "$file")
        
        # Specialized prompts for known issues
        if [[ "$file" == *"PhoneInfoView.kt" ]]; then
          system_msg="Fix deprecated 'LocalClipboardManager' usage by replacing with 'LocalClipboard' which supports suspend functions. Ensure coroutine context is handled properly."
        elif [[ "$file" == *"build.gradle.kts" ]]; then
          system_msg="Update Ktor dependencies to version 3.3.0 or newer to resolve DEX space character issue. Also ensure Java 21 compatibility."
        else
          system_msg="Recode Android file: 1) Fix warnings and deprecations 2) Optimize performance 3) Modernize practices 4) Keep all functionality. Output ONLY the recoded file content."
        fi
        
        prompt=$(jq -n \
          --arg history "$history" \
          --arg content "$content" \
          --arg file "$file" \
          --arg sys "$system_msg" \
          '{
            model: env.MODEL,
            messages: [
              {
                role: "system",
                content: $sys
              },
              {
                role: "user",
                content: ("File: \($file)\nHistory:\n\($history)\n\nCurrent content:\n\($content)")
              }
            ],
            max_tokens: 4096,
            temperature: 0.2
          }')
          
        response=$(curl -s https://api.deepseek.com/v1/chat/completions \
          -H "Authorization: Bearer $DEEPSEEK_API_KEY" \
          -H "Content-Type: application/json" \
          -d "$prompt")
          
        new_content=$(echo "$response" | jq -r '.choices[0].message.content')
        
        if [ -n "$new_content" ] && [ "$new_content" != "null" ]; then
          # Clean and validate output
          cleaned_content=$(echo "$new_content" | python -c "import sys, re; print(re.sub(r'^```[a-zA-Z]*\n|\n```$', '', sys.stdin.read(), flags=re.MULTILINE))")
          
          if [ -n "$cleaned_content" ]; then
            echo "$cleaned_content" > "$file"
            echo "‚úÖ $file"
          else
            echo "‚ö†Ô∏è Empty output for $file"
          fi
        else
          echo "‚ö†Ô∏è No changes for $file"
        fi
        EOF
        
        chmod +x recode_worker.sh
        echo "$files" | parallel -j $PARALLEL_JOBS ./recode_worker.sh {}
        
        # Count modified files
        modified_files=$(git diff --name-only | wc -l)
        echo "modified=$modified_files" >> $GITHUB_OUTPUT

    # Additional explicit fixes
    - name: Apply Critical Fixes
      run: |
        # 1. Fix ClipboardManager deprecation
        find . -name '*.kt' -exec sed -i 's/LocalClipboardManager\.current/LocalClipboard.current/g' {} \;
        
        # 2. Fix Ktor DEX error by updating to 3.3.0+
        sed -i -E 's/ktor-client-core(-jvm)?:[0-9]+\.[0-9]+\.[0-9]+/ktor-client-core\1:3.3.0/g' build.gradle.kts
        sed -i -E 's/ktor-client-core:[0-9]+\.[0-9]+\.[0-9]+/ktor-client-core:3.3.0/g' build.gradle.kts
        
        # 3. Add coreLibraryDesugaring for Java 21 features
        sed -i "s/android {/android {\n    compileOptions {\n        coreLibraryDesugaringEnabled true\n    }/g" build.gradle.kts
        sed -i "/dependencies {/a\    coreLibraryDesugaring(\"com.android.tools:desugar_jdk_libs:2.0.4\")" build.gradle.kts
        
        # 4. Increase DEX heap size
        echo "org.gradle.jvmargs=-Xmx4g -XX:MaxMetaspaceSize=1g" >> gradle.properties

    - name: Show recoding results
      run: |
        echo "Modified files: ${{ steps.deepseek_recode.outputs.modified }}"
        git diff --stat
        
    # Build environment setup
    - name: Setup JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '21'
        
    - name: Get Release Version
      id: release
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        repository: ${{ github.repository }}
        
    # Build with increased resources
    - name: Build APK
      run: |
        chmod +x gradlew
        ./gradlew :android:packageRelease --no-daemon --max-workers=4 --stacktrace
        ./gradlew --stop
        
    # Signing and release steps
    - name: Configure Build Tools
      run: |
        BUILD_TOOL_VERSION=$(ls /usr/local/lib/android/sdk/build-tools/ | tail -n1)
        echo "BUILD_TOOL_VERSION=$BUILD_TOOL_VERSION" >> $GITHUB_ENV
        
    - name: Sign APK
      id: sign_apk
      uses: filippoLeporati93/android-release-signer@v1
      with:
        releaseDirectory: android/build/outputs/apk/release
        signingKeyBase64: ${{ secrets.ANDROID_SIGNING_KEY }}
        alias: ${{ secrets.ANDROID_SIGNING_KEY_ALIAS }}
        keyStorePassword: ${{ secrets.ANDROID_SIGNING_KEY_PWD }}
        keyPassword: ${{ secrets.ANDROID_SIGNING_KEY_PWD }}
      env:
        BUILD_TOOLS_VERSION: ${{ env.BUILD_TOOL_VERSION }}
        
    - name: Prepare Release Asset
      run: |
        mv ${{ steps.sign_apk.outputs.signedReleaseFile }} \
          android/build/outputs/apk/release/app_${{ steps.release.outputs.release }}.apk
        
    - name: Generate Release Notes
      id: release_notes
      env:
        COMMIT_RANGE: $(git describe --tags --abbrev=0)..HEAD
      run: |
        commits=$(git log --pretty=format:"%h %s (%an)" $COMMIT_RANGE)
        
        notes_prompt=$(jq -n \
          --arg commits "$commits" \
          --arg version "${{ steps.release.outputs.release }}" \
          '{
            model: "deepseek-coder",
            messages: [
              {
                role: "system",
                content: "Generate release notes in markdown. Highlight fixes for clipboard deprecation and Ktor DEX issues. Mention Java 21 support."
              },
              {
                role: "user",
                content: ("Version: \($version)\nCommits:\n\($commits)\n\nKey fixes:\n- Fixed LocalClipboardManager deprecation\n- Updated Ktor to 3.3.0+ to resolve DEX error\n- Added core library desugaring for Java 21")
              }
            ],
            max_tokens: 800
          }')
          
        curl -s https://api.deepseek.com/v1/chat/completions \
          -H "Authorization: Bearer $DEEPSEEK_API_KEY" \
          -H "Content-Type: application/json" \
          -d "$notes_prompt" | jq -r '.choices[0].message.content' > release_notes.md
        
    - name: Publish Release
      uses: ncipollo/release-action@v1
      with:
        artifacts: android/build/outputs/apk/release/app_${{ steps.release.outputs.release }}.apk
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ steps.release.outputs.release }}
        bodyFile: release_notes.md
        allowUpdates: true
        
    # Recoding report
    - name: Generate Recoding Report
      if: ${{ always() }}
      uses: actions/github-script@v7
      env:
        MODIFIED: ${{ steps.deepseek_recode.outputs.modified }}
      with:
        script: |
          const fs = require('fs');
          const core = require('@actions/core');
          
          const report = `
          ## DeepSeek Recoding Report
          **Files processed**: ${{ env.MAX_FILES }}
          **Files modified**: ${process.env.MODIFIED}
          
          ### Critical Fixes Applied
          1. üõ†Ô∏è Replaced deprecated \`LocalClipboardManager\` with \`LocalClipboard\`
          2. ‚¨ÜÔ∏è Updated Ktor to 3.3.0+ to resolve DEX space character error
          3. ‚ôªÔ∏è Added core library desugaring for Java 21 support
          4. üß† Increased Gradle heap size to 4GB
          
          ### Build Improvements
          - Java 21 compatibility enhancements
          - DEX error resolution
          - Modernized clipboard handling
          - Kotlin coding best practices
          `;
          
          core.summary.addRaw(report).write();
